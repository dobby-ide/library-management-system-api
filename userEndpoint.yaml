openapi: 3.0.3
info:
  title: The library 4 System 3.0
  description: |-
    This is a library management system Server based on the OpenAPI 3.0 specification.
  contact:
    email: fabio_alex@email.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
externalDocs:
  description: Find out more about the library-Server
  url: http://thelibraryServer.io
servers:
  - url: https://libray.swagger.io/api/v1
tags:
  - name: User
    description: user defined operations
    externalDocs:
      description: Find out more
      url: http://swagger.io
  - name: User
    description: Operations about user
  - name: User
    description: Operations about user
paths:
  /api/v1/user/login:
    post:
      tags:
        - User
      summary: Login a user
      description: User
      requestBody:
        description: User email and password
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string


        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: access token for the login
        '400':
          description: Invalid ID supplied
        '404':
          description: User not found
        '405':
          description: Validation exception

  /api/v1/user/logout/{token}:
    post:
      tags:
        - User
      parameters:
      - name: token
        in: path
        description: User token when the user was logged in
        required: true
        schema:
          type: object
          properties:
                  token:
                    type: string
                    description: access token to be deleted by the server
      responses:
        '200':
          description: OK
        '401':
          description: Not authorized
        '500':
          description: server error

  /api/v1/user/{userId}:
    put:
      summary: Update a user infos
      tags:
       - User
      parameters:
      - name: userId
        in: path
        description: Id of user to be updated
        required: true
        schema:
          type: object
          properties:
                  userId:
                    type: string
                    description: userId to identify the user to be updated
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                    newUserName:
                      type: string
                      description: the new userName of the user
        '401':
          description: not authorized
        '404':
          description: user not found
        '500':
          description: Internal server error
